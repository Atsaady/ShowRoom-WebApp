// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShowRoom.Data;

namespace ShowRoom.Migrations
{
    [DbContext(typeof(ShowRoomContext))]
    [Migration("20201112093257_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShowRoom.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminPanelId");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FullName")
                        .IsRequired();

                    b.Property<string>("Gender")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("AdminPanelId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("ShowRoom.Models.AdminPanel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("ShowRoom.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClothingsId");

                    b.Property<int>("Count");

                    b.Property<int?>("accountId");

                    b.HasKey("Id");

                    b.HasIndex("ClothingsId");

                    b.HasIndex("accountId");

                    b.ToTable("Cart");
                });

            modelBuilder.Entity("ShowRoom.Models.CartBeforeOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClothingsId");

                    b.Property<int>("Count");

                    b.Property<string>("tran");

                    b.HasKey("Id");

                    b.HasIndex("ClothingsId");

                    b.ToTable("CartBeforeOrder");
                });

            modelBuilder.Entity("ShowRoom.Models.Click_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId");

                    b.Property<DateTime>("ClickTime");

                    b.Property<int?>("ClothingsId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ClothingsId");

                    b.ToTable("Click_Details");
                });

            modelBuilder.Entity("ShowRoom.Models.ClothingOrders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClothingsId");

                    b.Property<int>("Count");

                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ClothingsId");

                    b.HasIndex("OrderId");

                    b.ToTable("ClothingOrders");
                });

            modelBuilder.Entity("ShowRoom.Models.Clothings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminPanelId");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<double>("Price");

                    b.HasKey("Id");

                    b.HasIndex("AdminPanelId");

                    b.ToTable("Clothings");
                });

            modelBuilder.Entity("ShowRoom.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Message")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("ShowRoom.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId");

                    b.Property<string>("Address");

                    b.Property<int?>("AdminPanelId");

                    b.Property<DateTime>("OrderTime");

                    b.Property<string>("Phone");

                    b.Property<double>("SumToPay");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AdminPanelId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ShowRoom.Models.Account", b =>
                {
                    b.HasOne("ShowRoom.Models.AdminPanel")
                        .WithMany("Accounts")
                        .HasForeignKey("AdminPanelId");
                });

            modelBuilder.Entity("ShowRoom.Models.Cart", b =>
                {
                    b.HasOne("ShowRoom.Models.Clothings", "Clothings")
                        .WithMany()
                        .HasForeignKey("ClothingsId");

                    b.HasOne("ShowRoom.Models.Account", "account")
                        .WithMany()
                        .HasForeignKey("accountId");
                });

            modelBuilder.Entity("ShowRoom.Models.CartBeforeOrder", b =>
                {
                    b.HasOne("ShowRoom.Models.Clothings", "Clothings")
                        .WithMany()
                        .HasForeignKey("ClothingsId");
                });

            modelBuilder.Entity("ShowRoom.Models.Click_Details", b =>
                {
                    b.HasOne("ShowRoom.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("ShowRoom.Models.Clothings", "Clothings")
                        .WithMany()
                        .HasForeignKey("ClothingsId");
                });

            modelBuilder.Entity("ShowRoom.Models.ClothingOrders", b =>
                {
                    b.HasOne("ShowRoom.Models.Clothings", "Clothings")
                        .WithMany("ClothingOrders")
                        .HasForeignKey("ClothingsId");

                    b.HasOne("ShowRoom.Models.Order", "Order")
                        .WithMany("ClothingOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ShowRoom.Models.Clothings", b =>
                {
                    b.HasOne("ShowRoom.Models.AdminPanel")
                        .WithMany("Clothings")
                        .HasForeignKey("AdminPanelId");
                });

            modelBuilder.Entity("ShowRoom.Models.Order", b =>
                {
                    b.HasOne("ShowRoom.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("ShowRoom.Models.AdminPanel")
                        .WithMany("Orders")
                        .HasForeignKey("AdminPanelId");
                });
#pragma warning restore 612, 618
        }
    }
}
